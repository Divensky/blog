нужно самому делать ошибки, чтобы мозг сделал квантовый скачок. 
Использовать такие принципы:
- просить ИИ объяснять, а не просто давать готовый код
- если получил код от ИИ - переписывать ручками, без CTRL+C, чтобы хотя бы моторику нарабатывать
- спрашивать ИИ только после того, как сам продумал возможный вариант решения (ну или если вообще никаких идей нет, но хотя бы подумал) 
- перепроверять ответы ИИ на важные вопросы через гугл-поиск и/или другой ИИ (у меня пара chatGPI + phind.com)
- спрашивать ИИ о best practices при решении задач.  

Inspiration for the above was the video: https://youtu.be/eGFH8Jhb2Nk?si=cDgSFp0TUxg2oXoK

Also: 
- Don't ask a more senior dev before you've made SURE that AI cannot answer this Q. 

Using AI While Learning to Code

Can AI write code for you? Sure! Can it think for you? Well...

Pros of using AI to code for you: 

* Faster, short-term 
* It often incorporates best practices

Pros of using AI: 

* Copy-paste does not give you learning experience
* Slower, long-term: you ask AI again and again about the same thing

Here are the principles that I deduced: 

Knowledge is CERTAINTY. When you're certain of something, you know it. Every time you have spent some time learning to code or practicing coding, you want walk out being CERTAIN of at least one more thing.

* Don't ask AI to give you the code. Ask it to explain. 
* Identify what you're missing to execute the coding task at hand. Ask AI to help you fill in that missing piece - not code. 
* Never use cut-and-paste. If you're using the code AI gave you, TYPE each part of it with your fingers. You know why? Your fingers learn to think, too :) Kidding. As you're typing, it's your chance to spot things you don't really know. And you get used to executing concepts in code. 







